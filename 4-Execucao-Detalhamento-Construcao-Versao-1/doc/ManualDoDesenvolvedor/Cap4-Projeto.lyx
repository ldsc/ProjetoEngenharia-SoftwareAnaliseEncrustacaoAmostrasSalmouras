#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}
\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}

% Comentar linhas abaixo se não estiver usando pacote abntex
% ou se o pacote ainda não foi instalado.
% neste caso sugere-se usar citações no padrão apalike (lembra o da anbt).
%\usepackage[alf ,abnt-etal-cite=2 , abnt-year-extra-label=yes , abnt-etal-list=0]{abntcite}
%\usepackage {helvet}
%\renewcommand {\familydefault}{\sfdefault}

% Para uso de listagens de código
\usepackage{color}
\definecolor{azulclaro}{rgb}{0.6,1,1}%   rgb color model
% Informa que vai usar o pacote listings, 
% disponibilizado em /usr/share/texmf/doc/latex/styles/listings.dvi
\usepackage{listings}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children no
\language brazilian
\language_package auto
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Chapter
Projeto 
\begin_inset CommandInset label
LatexCommand label
name "chap:Projeto-do-Sistema"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lhead{
\backslash
thechapter - Projeto} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Neste capítulo do projeto de engenharia veremos questões associadas ao projeto do sistema,
 incluindo protocolos,
 recursos,
 plataformas suportadas,
 inplicações nos diagramas feitos anteriormente,
 diagramas de componentes e implantação.
 Na segunda parte revisamos os diagramas levando em conta as decisões do projeto do sistema.
\end_layout

\begin_layout Section
Projeto do sistema
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Projeto do sistema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-do-sistema"

\end_inset


\end_layout

\begin_layout Standard
Depois da análise orientada a objeto desenvolve-se o projeto do sistema,
 qual envolve etapas como a definição dos protocolos,
 da interface API,
 o uso de recursos,
 a subdivisão do sistema em subsistemas,
 a alocação dos subsistemas ao hardware e a seleção das estruturas de controle,
 a seleção das plataformas do sistema,
 das bibliotecas externas,
 dos padrões de projeto,
 além da tomada de decisões conceituais e políticas que formam a infraestrutura do projeto.
\end_layout

\begin_layout Standard
Deve-se definir padrões de documentação,
 padrões para o nome das classes,
 padrões de retorno e de parâmetros em métodos,
 características da interface do usuário e características de desempenho.
 
\end_layout

\begin_layout Standard
Segundo 
\begin_inset CommandInset citation
LatexCommand cite
key "prog-UML-Rumbaugh,prog-UML-blaha"
literal "true"

\end_inset

,
 o projeto do sistema é a estratégia de alto nível para resolver o problema e elaborar uma solução.
 Você deve se preocupar com itens como:
 
\end_layout

\begin_layout Enumerate
Protocolos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Protocolos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Definição dos protocolos de comunicação entre os diversos elementos externos 
\begin_inset Newline newline
\end_inset

Neste projeto não há comunicação com dispositivos externos,
 mas o sistema pode ser adaptado para ler sensores de pH ou condutividade via serial no futuro.
\end_layout

\begin_layout Itemize
A comunicação interna entre objetos ocorre por chamadas diretas a métodos públicos.
\end_layout

\begin_layout Itemize
A interface API é implementada implicitamente nas classes que encapsulam a lógica de precipitação e manipulação de dados (ex:
 CalcularPrecipitacao,
 Sal,
 ion)
\end_layout

\begin_layout Itemize
.Os arquivos gerados são .txt ou .csv,
 formatos abertos e compatíveis com editores comuns e softwares de análise.
\end_layout

\end_deeper
\begin_layout Enumerate
Recursos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Recursos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Os recursos são gerenciados pelo próprio sistema,
 que armazena os dados em memória RAM.
 Não há alocação externa.
\end_layout

\begin_layout Itemize
Não há necessidade de banco de dados;
 todos os dados são temporários e manipulados em tempo de execução.
\end_layout

\begin_layout Itemize
O sistema não utiliza armazenamento de massa dedicado,
 apenas arquivos locais temporários para exportação de dados.
\end_layout

\end_deeper
\begin_layout Enumerate
Controle
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Controle
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O controle do sistema é sequencial,
 baseado em eventos gerados pela interação do usuário com a interface (via terminal ou GUI futura).
\end_layout

\begin_layout Itemize
O sistema prevê condições inválidas (ex:
 sais sem coeficientes definidos) com mensagens de erro.
\end_layout

\begin_layout Itemize
A otimização de código é feita com uso de bibliotecas padrão,
 evitando redundâncias.
\end_layout

\begin_layout Itemize
Loops de controle são utilizados nas análises de precipitação (ex:
 iteração sobre sais).
\end_layout

\begin_layout Itemize
O sistema não possui concorrência ou paralelismo nesta versão.
\end_layout

\end_deeper
\begin_layout Enumerate
Plataformas
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O sistema segue arquitetura tradicional cliente-desktop.
\end_layout

\begin_layout Itemize
Os subsistemas identificados são:
 Entrada de dados,
 Cálculo,
 Interface,
 Termodinâmica e Química.
\end_layout

\begin_layout Itemize
O sistema suporta as plataformas Windows,
 Linux e Mac via compilação com CMake.
\end_layout

\begin_layout Itemize
As bibliotecas externas utilizadas são padrão do C++ (STL).
\end_layout

\end_deeper
\begin_layout Section
Projeto orientado a objeto – POO
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
POO
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Projeto orientado a objeto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-orientado-a-objeto"

\end_inset


\end_layout

\begin_layout Standard
O projeto orientado a objeto considera as decisões tomadas no projeto do sistema e implementa uma solução concreta.
 Foram feitas otimizações de métodos e atributos,
 modularização do código,
 uso de encapsulamento,
 clareza nos nomes e divisão lógica das responsabilidades.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 estrutural
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-estrutural"

\end_inset


\end_layout

\begin_layout Itemize
Os diagramas foram atualizados com inclusão de bibliotecas e classes utilitárias.
\end_layout

\begin_layout Itemize
Foram criadas classes adicionais como CalcularPrecipitacao e CriarIon para modularização.
\end_layout

\begin_layout Itemize
Dependências entre Sal,
 Ion e CriarIons foram estabelecidas com composição.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 dinâmico
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-dinamico"

\end_inset


\end_layout

\begin_layout Itemize
O diagrama de sequência foi ajustado para representar interações com o novo fluxo de entrada de dados e execução.
\end_layout

\begin_layout Itemize
Não há necessidade de novos diagramas de máquina de estado nesta versão.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nos atributos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
atributos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-nos-atributos"

\end_inset


\end_layout

\begin_layout Itemize
Foram incluídos atributos auxiliares como coef1,
 coef2,
 Ksp,
 concentração,
 carga,
 e nome com validadores nas classes.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nos métodos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
métodos
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Efeitos do projeto nos métodos
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Métodos para análise de precipitação foram adicionados (CalcularProdutoIonico,
 VaiPrecipitar).
\end_layout

\begin_layout Itemize
Métodos foram organizados em funções públicas de controle e funções internas de cálculo.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nas heranças
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
heranças
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Efeitos do projeto nas heranças
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Heranças
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Não há uso de herança nesta versão para manter o sistema simples e modular.
 Futuras versões poderão introduzir polimorfismo para tipos de sais.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nas associações
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Efeitos do projeto nas associações
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Associações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
As associações são diretas (ex:
 Sal contém dois ions)......
\end_layout

\begin_layout Section
Diagrama de componentes
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de componentes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-componentes"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de componentes mostra a forma como os módulos do software se relacionam entre si e suas dependências.
 No projeto Software de Análise de Incrustação de Amostras de Salmouras,
 cada pacote funcional se transforma em um componente lógico,
 facilitando a modularização e manutenção do código.
 
\end_layout

\begin_layout Standard
Na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-componentes"
nolink "false"

\end_inset

 observa-se que:
\end_layout

\begin_layout Itemize
O componente ModuloEntradaDados é responsável pela criação e armazenamento de íons e sais a partir da entrada do usuário,
 utilizando as classes CCriarIons e CSal.
\end_layout

\begin_layout Itemize
O ModuloTermodinamico utiliza a classe CCondicoesTermodinamicas para registrar temperatura e pressão da salmoura.
\end_layout

\begin_layout Itemize
O ModuloAnalise depende de Sal,
 ion e CalcularPrecipitacao para processar os dados e verificar precipitação.
\end_layout

\begin_layout Itemize
O ModuloInterface agrupa os arquivos do main() e os módulos de teste,
 controlando a visualização no terminal (e futuramente em Qt).
\end_layout

\begin_layout Itemize
Todos esses componentes são compilados no executável final SimuladorPrecipitacao.exe.Nota:
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Não perca de vista a visão do todo;
 do projeto de engenharia como um todo.
 Cada capítulo,
 cada seção,
 cada parágrafo deve se encaixar.
 Este é um diferencial fundamental do engenheiro em relação ao técnico,
 a capacidade de desenvolver projetos,
 de ver o todo e suas diferentes partes,
 de modelar processos/sistemas/produtos de engenharia.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../imagens/Diagrama de Pacote.png
	lyxscale 40
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de componentes
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-componentes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de implantação
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de implantação
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de execução
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-execução"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de implantação é um diagrama de alto nível que inclui relações entre o sistema e o hardware e que se preocupa com os aspectos da arquitetura computacional escolhida.
 Seu enfoque é o hardware,
 a configuração dos nós em tempo de execução.
\end_layout

\begin_layout Standard
No caso do Software de Análise de Incrustação de Amostras de Salmouras,,
 o sistema é executado localmente em um computador pessoal (desktop ou notebook),
 sem necessidade de rede.
 Todos os módulos estão compilados em um único executável e são armazenados localmente,
 sendo a execução feita por linha de comando ou futura interface gráfica.
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-implantação."
nolink "false"

\end_inset

 o diagrama de implantação adaptado ao projeto.
 Ele mostra:
\end_layout

\begin_layout Itemize
Um nó denominado Computador Corporativo,
 com anotações do tipo {localização:
 laboratório de simulação}.
\end_layout

\begin_layout Itemize
Conectado a este nó está o executável SimuladorPrecipitacao.exe,
 que contém internamente os módulos Analise,
 EntradaDados,
 Termodinamico e Interface.
\end_layout

\begin_layout Itemize
Todos os arquivos .cpp e .h estão acessíveis localmente,
 não sendo necessário banco de dados nem rede para o funcionamento do sistema.
\end_layout

\begin_layout Standard
Essa arquitetura simples e portátil facilita a execução do sistema em ambientes acadêmicos e industriais,
 com poucos requisitos de hardware.
 O uso de arquivos .txt para entrada e saída também favorece integração com outros softwares externos.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../imagens/DiagramaDeExecucao.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de implantação
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-implantação."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lista de características <<features>>
\begin_inset CommandInset label
LatexCommand label
name "subsec: Lista de características <<features>>"

\end_inset


\end_layout

\begin_layout Standard
No final do ciclo de concepção e análise chegamos a uma lista de características <<
\emph on
features
\emph default
>> que teremos de implementar.
\end_layout

\begin_layout Standard
Após a análises desenvolvidas e considerando o requisito de que este material deve ter um formato didático,
 chegamos a seguinte lista:
\begin_inset Note Note
status open

\begin_layout Plain Layout
nota importante,
 o número de versões irá depender do tamanho do ciclo,
 ou seja,
 número de dias de cada ciclo e capacidade da equipe.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
v0.1
\end_layout

\begin_deeper
\begin_layout Itemize
O sistema deve permitir o cadastro de íons com nome,
 concentração e carga elétrica.
\end_layout

\begin_layout Itemize
O sistema deve permitir recuperar dados de íons previamente cadastrados (Ex:
 "Ca2+",
 "CO3_2-").
\end_layout

\begin_layout Itemize
O sistema deve permitir definir um sal com nome,
 produto de solubilidade (Ksp),
 dois íons e seus coeficientes estequiométricos.
\end_layout

\begin_layout Itemize
O sistema deve calcular o produto iônico e compará-lo com o Ksp para verificar se há precipitação.
\end_layout

\begin_layout Itemize
O sistema deve plotar a saída no terminal,
 indicando o nome do sal,
 o valor de Q (produto iônico),
 o valor do Ksp e se ocorre ou não precipitação.
\end_layout

\begin_layout Itemize
O sistema deve permitir inserir condições termodinâmicas (pressão e temperatura),
 mesmo que ainda não influenciem os cálculos diretamente.
\end_layout

\end_deeper
\begin_layout Itemize
v0.3
\end_layout

\begin_deeper
\begin_layout Itemize
O sistema deve armazenar múltiplos sais em um vetor e avaliar todos com um único comando.
\end_layout

\begin_layout Itemize
O sistema deve ser modular e permitir expansão para novos tipos de sais,
 com diferentes coeficientes estequiométricos.
\end_layout

\begin_layout Itemize
O sistema deve incluir mensagens mais claras para o usuário final (ex:
 usar nomes comerciais dos sais).
\end_layout

\end_deeper
\begin_layout Itemize
v0.7
\end_layout

\begin_deeper
\begin_layout Itemize
O sistema deve apresentar uma interface simples (GUI) ou permitir leitura de dados a partir de arquivos externos (.txt,
 .dat ou .csv).
\end_layout

\begin_layout Itemize
O sistema deve plotar gráficos de pressão vs.
 temperatura,
 simulando cenários reais de precipitação de sais.
\end_layout

\begin_layout Itemize
O sistema deve considerar a influência da temperatura e pH sobre o Ksp (ex:
 ajuste com base em curvas experimentais).
\end_layout

\begin_layout Itemize
O sistema deve gerar relatórios automáticos com os resultados da análise (ex:
 quais sais precipitam em quais condições).
\end_layout

\end_deeper
\begin_layout Subsection
Tabela classificação sistema
\begin_inset CommandInset label
LatexCommand label
name "subsec:Tabela-classificação-sistema"

\end_inset


\end_layout

\begin_layout Standard
A Tabela a seguir é utilizada para classificação do sistema desenvolvido.
 Deve ser preenchida na etapa de projeto e revisada no final,
 quando o software for entregue na sua versão final.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A tabela esta preenchida com dados de um dos exemplos de projeto;
 você deve preencher de acordo com o problema específico que esta resolvendo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="22" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="12cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Licença:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] livre GPL-v3 [ ] proprietária
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Engenharia de software:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ]
\color blue
 
\color inherit
tradicional [X] ágil [ ] outras
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Paradigma de programação:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ] estruturada [X] orientado a objeto - POO [ ] funcional
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Modelagem UML:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] básica 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Diagramas de caso de uso,
 de componentes(assuntos/pacotes/componentes),
 de classes,
 de sequência,
 de distribuição
\end_layout

\end_inset

[X] intermediária 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Diagramas de máquina de estado,
 de atividades
\end_layout

\end_inset

[ ] avançada
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Uso de recursos avançados de UML
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Algoritmos
\color inherit
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] alto nível 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color blue
:

\color inherit
 são algoritmos que são implementados utilizando instruções mais complexas.
\end_layout

\end_inset

[X] baixo nível
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color blue
:

\color inherit
 são algoritmos que são implementados utilizando instruções mais básicas e essenciais.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
implementação:
 [ ] recursivo ou [X] iterativo
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\color blue
:

\series default
 
\color inherit
um algoritmo iterativo utiliza estruturas de repetição,
 fazendo com que determinadas atividades sejam repetidas tantas vezes quanto necessárias,
 normalmente temos algum critério de parada.
 Já um algoritmo recursivo é um algoritmo que chama a sí mesmo.
 Note que chamar a sí mesmo é uma forma de iteração.
 O exemplo do pagamento dos salários é iterativo,
 foi do empregado 1 ao empregado 10000.
\end_layout

\end_inset

;
 [X] determinístico 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color blue
:

\color inherit
 é determinístico quando o caminho para solução é exato e não-determinístico quando usamos mecanismos de busca/estimativas para encontrar uma solução.
\end_layout

\end_inset

ou [ ] não-determinístico;
 [ ] exato ou [X] aproximado
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color blue
:
 
\color inherit
muitas vezes tenho a equação que me dá uma solução exata,
 quando utilizo esta equação meu algoritmo é exato.
 Mas em muitas situações eu não tenho a soluição exata,
 tenho apenas equações aproximadas,
 quando uso uma equação inexata ou empírica,
 sei que meu algoritmo é aproximado.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
concorrências:
 [X] serial [X] concorrente [X] paralelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradigma:
 [X] dividir para conquistar
\begin_inset Note Note
status collapsed

\begin_layout Itemize

\series bold
\color blue
:

\series default
 
\color inherit
são algoritmos que trabalham com a divisão e subdivisão de um problema em partes menores;
\end_layout

\begin_deeper
\begin_layout Itemize
Exemplo:
 escrever seu TCC - Trabalho de Conclusão de Curso,
 você irá dividir o mesmo em vários capítulos,
 os capítulos em seções e as seções em subseções.
 De forma que então conseguirá desenvolver seu trabalho,
 pois as partes pequenas tornam-se viáveis de serem feitas.
\end_layout

\end_deeper
\end_inset

 [ ] programação linear
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\color blue
:

\series default
\color inherit
 o problema é resolvido através de programação linear envolvendo a busca de máximos e mínimos
\end_layout

\end_inset

 [ ] transformação/ redução
\begin_inset Note Note
status collapsed

\begin_layout Itemize

\series bold
\color blue
:

\series default
\color inherit
 são algoritmos que mudam o problema fazendo associações com outros,
 geralmente eu conheço a solução deste outro problema,
 resolvo o mesmo,
 e então retorno;
 é exatamente o que fazemos por exemplo quando usamos uma transformada matemática para resolver um problema.
\end_layout

\begin_deeper
\begin_layout Itemize
Exemplo:
 não sei resolver estas equações professor.
 Faça uma transformada de Laplace,
 resolva no espaço de Laplace e então volte.
\end_layout

\end_deeper
\end_inset

 [ ] busca e enumeração
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\color blue
:

\series default
\color inherit
 são algoritmos que usam a teoria dos grafos.
\end_layout

\end_inset

 [ ] heurístico e probabilístico
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\color blue
:

\series default
\color inherit
 são algoritmos que trabalham com números aleatórios e heurísticas,
 aproximações,
 em busca da solução.
\end_layout

\end_inset

 [ ] baseados em pilhas
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\color blue
:

\series default
\color inherit
 são algoritmos de cálculo implementados utilizando o conceito de pilhas e Notação Polonesa Inversa (
\emph on
RPN - Reverse Polish Notation
\emph default
),
 também conhecida como notação pós-fixada.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Software:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ] de base
\begin_inset Note Note
status collapsed

\begin_layout Itemize

\series bold
:
 
\series default
Estão relacionados ao funcionamento do computador e seus recursos (processador,
 memória,
 hd,
 teclado,
 mouse,
 portas,
 etc).
 Exemplos:
\end_layout

\begin_deeper
\begin_layout Itemize
Sistemas operacionais (Windows,
 GNU/Linux,
 Mac Os X,
 Android).
\end_layout

\begin_layout Itemize
Suporte ao sistema operacional (
\emph on
drivers 
\emph default
de dispositivos).
\end_layout

\begin_layout Itemize
Suporte ao desenvolvimento de software (compiladores,

\emph on
 debugers
\emph default
,
 
\emph on
profilers
\emph default
,
 ambientes de desenvolvimento).
\end_layout

\begin_layout Itemize
Suporte a manutenção do computador (utilitários).
\end_layout

\end_deeper
\end_inset

 [X] aplicados
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:
 
\series default
São os demais softwares,
 os que nos ajudam no dia a dia.
 Podemos dividir em softwares de cunho geral,
 específicos e científicos.
 Esta divisão faz sentido pois os softwares específicos exigem conhecimentos técnicos da área específica e os softwares científicos tem requisitos diferenciados no que se refere a interface,
 documentação,
 demandas de otimização,
 consumo de memória e performance.
 Exemplos:
\end_layout

\end_inset

 [ ] de cunho geral
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Editor de texto,
 editor de apresentações e planilha eletrônica (ex:
 Office,
 Libre Office).
\end_layout

\begin_deeper
\begin_layout Itemize
Aplicativos para ver filmes,
 ouvir músicas e jogos eletrônicos.
\end_layout

\begin_layout Itemize
Aplicações web como navegador de internet,
 gerenciador de email,
 gerenciador de tarefas (chrome,
 gmail).
\end_layout

\begin_layout Itemize
Gerenciador de arquivos na rede (ex:
 dropbox,
 google drive,
 github).
\end_layout

\end_deeper
\end_inset

 [X] específicos para determinada área
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Da área de medicina (interpretação de imagens e diagnósticos).
\end_layout

\begin_deeper
\begin_layout Itemize
Da área de direito (gestão de documentos e processos).
\end_layout

\begin_layout Itemize
Da área de engenharia (CAD,
 modeladores,
 simuladores específicos).
\begin_inset Note Note
status open

\begin_layout Plain Layout
Com uso de IA - Inteligência Artificial.
\end_layout

\end_inset


\end_layout

\end_deeper
\end_inset

 [X] educativo [X] científico
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Modeladores e simuladores de cunho acadêmico.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
instruções:
 [X] alto nível [ ] baixo nível
\begin_inset Note Note
status open

\begin_layout Plain Layout
interrupções/assembler
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
otimização:
 [X] serial não otimizado
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:

\series default
 executa uma sequência de instruções de forma serial (não existe antecipação,
 nem desvios).
 Não houve preocupação com desempenho.
 Não foram aproveitadas opções de otimização do compilador e do processador específico.
 É a forma de programação mais usual!
\end_layout

\end_inset

 [X] serial otimizado
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:
 
\series default
Neste caso houve preocupação com desempenho,
 com a escolha dos melhores algoritmos,
 com alocação de memória(ex:
 uso de ponteiros),
 com a forma como a linguagem e o sistema operacional lidam com a memória,
 com a chamada das funções.
 Foram aproveitadas opções de otimização do compilador e do processador específico.
 É a forma de otimização mais usual,
 a primeira a ser adotada.
\end_layout

\end_inset

 [X] concorrente
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:
 
\series default
Neste caso dois ou mais processos/
\emph on
threads
\emph default
 diferentes rodam ao mesmo tempo e trocam informações entre sí.
 Um exemplo típico é o caso do produtor/consumidor.
 O produtor gera dados que são processador pelo consumidor.
 Note que teremos pelo menos dois núcleos sendo utilizados,
 cada um fazendo um processamento diferente.
 Note que os softwares podem ter sido desenvolvidos em linguagens diferentes,
 a comunicação pode ser feita por exemplo via pipe (um canal de comunicação entre programas).
\end_layout

\end_inset

 [X] paralelo
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:

\series default
 Neste caso dois ou mais processos/
\emph on
threads
\emph default
 iguais rodam em paralelo.
 Um exemplo típico em engenharia é pegar um cálculo muito longo e dividir o mesmo.
 Por exemplo,
 preciso aplicar um filtro passa baixa sobre uma imagem grande.
 Se tenho 4 núcleos a disposição divido a imagem em 4 pedaços e processo cada pedaço usando um dos núcleos.
 Se este processamento for independente é fácil implementar,
 porém,
 se tiver intersecções,
 então terei de usar mecanismos de comunicação entre processos/threads.
\end_layout

\end_inset

 [ ] vetorial
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
:

\series default
 alguns hardwares possibilitam o uso de processamento vetorial,
 antigamente eram muito específicos e caros,
 mas hoje em dia várias CPUs tem capacidade de processamento vetorial,
 por exemplo com o uso de SIMD - Uma Instrução Múltiplos Dados.
 A ideia aqui é que o processador carrega um vetor de dados A,
 carrega um vetor de dados B,
 e realiza a operação de soma armazenando o resultado em C.
 Isto é feito simultaneamente,
 isto é,
 as operações C[0] = A[0] + B[0];
 C[1] = A[1] + B[1];...;
 C[n] = A[n] + B[n];
 são todas feitas no mesmo instante (mesmo 
\emph on
clock
\emph default
).
 Alguns compiladores já permitem otimizações que viabilizam o uso deste tipo de processamento,
 notadamente nas bibliotecas padrões.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
interface do usuário:
 [ ] kernel numérico [ ] linha de comando [ ] modo texto [X] híbrida (texto e saídas gráficas) [ ] modo gráfico (ex:
 Qt) [ ] navegador
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Recursos de C++:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] C++ básico (FCC):
 variáveis padrões da linguagem,
 estruturas de controle e repetição,
 estruturas de dados,
 struct,
 classes(objetos,
 atributos,
 métodos),
 funções;
 entrada e saída de dados (
\emph on
streams
\emph default
),
 funções de cmath
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] C++ intermediário:
 funções lambda.
 Ponteiros,
 referências,
 herança,
 herança múltipla,
 polimorfismo,
 sobrecarga de funções e de operadores,
 tipos genéricos (templates),
 
\emph on
smarth pointers
\emph default
.
 Diretrizes de pré-processador,
 classes de armazenamento e modificadores de acesso.
 Estruturas de dados:
 enum,
 uniões.
 Bibliotecas:
 entrada e saída acesso com arquivos de disco,
 redirecionamento.
 Bibliotecas:
 
\emph on
filesystem
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] C++ intermediário 2:
 A biblioteca de gabaritos de C++ (a STL),
 containers,
 iteradores,
 objetos funções e funções genéricas.
 Noções de processamento paralelo (múltiplas threads,
 uso de 
\emph on
thread,
 join 
\emph default
e 
\emph on
mutex
\emph default
).
 Bibliotecas:
 
\emph on
random,
 threads
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ] C++ avançado:
 Conversão de tipos do usuário,
 especializações de templates,
 excessões.
 Cluster de computadores,
 processamento paralelo e concorrente,
 múltiplos processos (pipes,
 memória compartilhada,
 sinais).
 Bibliotecas:
 
\emph on
expressões regulares,
 múltiplos processos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Bibliotecas de C++:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] Entrada e saída de dados (
\emph on
streams
\emph default
) [X] cmath [X] 
\emph on
filesystem 
\emph default
[ ] 
\emph on
random 
\emph default
[X] 
\emph on
threads 
\emph default
[ ] 
\emph on
expressões regulares 
\emph default
[ ] 
\emph on
múltiplos processos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Bibliotecas externas:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] 
\family typewriter
CGnuplot 
\family default
[X] 
\family typewriter
QCustomPlot 
\family default
[ ] 
\family typewriter
Qt diálogos
\family default
 [ ] QT Janelas/menus/BT______
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Ferramentas auxiliares:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Montador:

\family typewriter
 
\family default
[X] make
\family typewriter
 
\family default
[] cmake
\family typewriter
 
\family default
[X] qmake
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
IDE:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[X] Editor simples:
 kate/gedit/emacs
\family typewriter
 
\family default
[ ] kdevelop
\family typewriter
 
\family default
[ ] QT-Creator
\family typewriter
 
\family default
[ ] ____________
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
SCV:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ] cvs
\family typewriter
 
\family default
[ ] svn
\family typewriter
 
\family default
[X] git
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
Disciplinas correlacionadas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ ] estatística
\begin_inset Note Note
status collapsed

\begin_layout Itemize
[ ] Básica:
 média,
 desvio padrão,
 histogramas,
 números pseudo randômicos.
 Estatística descritiva.
 Probabilidades.
 Variáveis aleatórias Unidimensionais.
 Função de variáveis aleatórias.
 Variáveis aleatórias de duas ou mais dimensões.
 Caracterização de variáveis aleatórias.
 Variáveis aleatórias discretas e contínuas.
 Teorema central do limite.
 Amostragem
\end_layout

\begin_layout Itemize
[ ] Intermediária:
 Estimação.
 Teste de hipótese.
 Correlação e regressão.
 Distribuições (normal.
 T-Student,
 X-quadrado)
\end_layout

\end_inset

 [ ] cálculo numérico 
\begin_inset Note Note
status collapsed

\begin_layout Itemize
[ ] Básico:
 erros,
 solver de função (iteração de ponto fixo,
 método das cordas,
 Newton-Raphson),
 integral numérica(trapésio,
 Simpson,
 Gauss),
 interpolação(interpolação polinomial,
 Lagrange,
 Newton,
 funções 
\emph on
spline
\emph default
),
 ajuste de curvas(ajuste por polinômios,
 mínimos quadrados) .
\end_layout

\begin_deeper
\begin_layout Itemize
[ ] Intermediário:
 matrizes e sistemas de equações lineares(solver de sistema de equações - TDMA,
 eliminação gauss,
 fatoração LU),
 solução numérica de equações diferenciais(método de Euler,
 método de Taylor e Runge-Kutta)
\end_layout

\end_deeper
\end_inset

 [ ]
\family typewriter
 
\family default
modelamento numérico 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
[ ] Volume de controle (equações de balanço).
 [ ] Diferenças finitas.
 [ ] Elementos finitos
\end_layout

\end_inset

 [X] análise e processamento de imagens
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
